<?
use Ouzo\Utilities\Arrays;
use Ouzo\Utilities\Json;

?>

<?
$options = [];
foreach ($this->game->game_users as $game_user) {
    $data = array_values(Arrays::mapEntries($game_user->getClosedByRoundForCricket(), function ($round, $closed) use ($game_user) {
        return [$round, $closed];
    }));
    $options[] = [
        'label' => $game_user->user->login,
        'data' => $data
    ];
}
?>

<style>
    #placeholder {
        height: 300px;
    }

    .legendLabel {
        color: #A6A1FF !important;
    }

    #placeholder div.flot-text {
        color: #A6A1FF !important;
    }
</style>
<div id="placeholder" class="demo-placeholder"></div>
<div id="legend-container"></div>

<?= addFile(array('type' => 'script', 'params' => array('url' => '/public/js/jquery.flot.min.js'))); ?>

<script type="text/javascript">

    $(function () {
        var data = <?= Json::encode($options)?>;
        $.plot("#placeholder", data, {
            legend: {
                container: $("#legend-container"),
                show: true
            },
            xaxis: {
                ticks: 10,
                min: 1,
                tickDecimals: 0
            },
            yaxis: {
                ticks: 10,
                min: 0,
                max : 9,
                tickDecimals: 0
            }
        });
    });
</script>
